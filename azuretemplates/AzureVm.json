{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "2994182323419045119"
    }
  },
  "parameters": {
    "virtualMachineName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources (e.g., eastus, westus). Default is the resource group location."
      }
    },
    "httpPort": {
      "type": "string",
      "defaultValue": "8080",
      "metadata": {
        "description": "Port number for HTTP traffic."
      }
    },
    "httpsPort": {
      "type": "string",
      "defaultValue": "8443",
      "metadata": {
        "description": "Port number for HTTPS traffic."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B8ls_v2",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "useExistingVNet": {
      "type": "bool",
      "metadata": {
        "description": "Deploy VM to an existing VNet? If false, a new VNet and subnet will be created."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network (used for both existing and new VNet)."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet (used for both existing and new subnet)."
      }
    },
    "newVnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix for the new virtual network (used if useExistingVNet is false)."
      }
    },
    "newSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Address prefix for the new subnet (used if useExistingVNet is false)."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for server admin account and also to access the application admin tools"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for server admin account and also to access the application admin tools"
      }
    }
  },
  "variables": {
    "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
  },
  "resources": [
    {
      "condition": "[not(parameters('useExistingVNet'))]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('newVnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('newSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[parameters('virtualMachineName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "diskSizeGB": 127,
            "deleteOption": "Delete"
          }
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "patchSettings": {
              "assessmentMode": "ImageDefault",
              "patchMode": "AutomaticByPlatform"
            }
          }
        },
        "securityProfile": {
          "securityType": "TrustedLaunch",
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('virtualMachineName')))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('virtualMachineName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[format('{0}-nic', parameters('virtualMachineName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-ip', parameters('virtualMachineName')))]",
                "properties": {
                  "deleteOption": "Delete"
                }
              },
              "subnet": {
                "id": "[variables('subnetResourceId')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-ip', parameters('virtualMachineName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[format('{0}-ip', parameters('virtualMachineName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', parameters('virtualMachineName'), 'installDocker')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [],
          "commandToExecute": "[format('bash -c \"curl -fsSL https://get.docker.com | sh && systemctl enable docker && systemctl start docker && docker run --restart unless-stopped -d -p {0}:{1} -p {2}:{3} -e HTTPPORT={4} -e HTTPSPORT={5} -e USER={6} -e PASSWORD={7} proxylab.azurecr.io/proxylab:latest\"', parameters('httpPort'), parameters('httpPort'), parameters('httpsPort'), parameters('httpsPort'), parameters('httpPort'), parameters('httpsPort'), parameters('adminUsername'), parameters('adminPassword'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
      ]
    }
  ]
}