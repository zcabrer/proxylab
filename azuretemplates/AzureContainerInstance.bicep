// Name of the container instance. Must be unique within the resource group.
param containerName string

// Azure region where the container instance will be deployed (e.g., 'eastus', 'westus').
param location string

// Port for HTTP traffic. Default is 80.
param httpPort int = 80

// Port for HTTPS traffic. Default is 443.
param httpsPort int = 443

// Username for the application admin tools.
param username string

// Secure password for the application admin tools.
@secure()
param password string

// Enable or disable logging to Log Analytics. Set to true to enable logging.
param enableLogging bool

// Log Analytics Workspace ID. Required if enableLogging is true. Locate the workspace ID in the Azure portal under the Log Analytics workspace -> Settings -> Agents management -> Log Analytics agent instructions dropdown -> Workspace ID.
param logAnalyticsWorkspaceId string = ''

// Log Analytics Workspace Key. Required if enableLogging is true. Locate the workspace key in the Azure portal under the Log Analytics workspace -> Settings -> Agents management -> Log Analytics agent instructions dropdown -> Primary Key
@secure()
param logAnalyticsWorkspaceKey string = ''


resource containerGroups_aci_proxylab_dev_name_resource 'Microsoft.ContainerInstance/containerGroups@2024-10-01-preview' = {
  name: containerName
  location: location
  properties: {
    sku: 'Standard'
    containers: [
      {
        name: containerName
        properties: {
          image: 'proxylab.azurecr.io/proxylab:v0.0.1'
          ports: [
            {
              protocol: 'TCP'
              port: httpPort
            }
            {
              protocol: 'TCP'
              port: httpsPort
            }
          ]
          environmentVariables: [
            {
              name: 'USER'
              value: username
            }
            {
              name: 'PASSWORD'
              secureValue: password
            }
            {
              name: 'HTTPPORT'
                value: '${httpPort}'
            }
            {
              name: 'HTTPSPORT'
              value: '${httpsPort}'
            }
          ]
          resources: {
            requests: {
              memoryInGB: json('1.5')
              cpu: json('1')
            }
          }
        }
      }
    ]
    initContainers: []
    restartPolicy: 'OnFailure'
    ipAddress: {
      ports: [
        {
          protocol: 'TCP'
          port: httpPort
        }
        {
          protocol: 'TCP'
          port: httpsPort
        }
      ]
      type: 'Public'
      dnsNameLabel: containerName
      autoGeneratedDomainNameLabelScope: 'TenantReuse'
    }
    osType: 'Linux'
    diagnostics: enableLogging ? {
      logAnalytics: {
        workspaceId: logAnalyticsWorkspaceId
        logType: 'ContainerInstanceLogs'
        workspaceKey: logAnalyticsWorkspaceKey
      }
    } : null
  }
}
